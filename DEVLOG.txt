the latest news is below...


- button bar:
    - make it a common timeline functionality (but with changeable button selection)
    - buttons emit some actions that affect data item corresponding to selection

    - button bar look: check out styles (want a flat translucent style)
    - positioning: center-under or something + be clever at window sides
    - can it go above the foreground?
        - make storyboard ticks part of its background instead
    - interaction: how can I make sure clicking in pane disables seek etc?
        - done for now, this will be even more logical when popups will move to TimeLineWidget

    - should be available for any item
    - should emit some actions...
    - start in the storyboard and work our way further
    - show currently selected thing in one widget
    - show extra panel like:
        [x] for deletion
        [<] [>] to move framewise

future:
- framewise motion (including motion with current selection)
- waveform selection (what gets played)
- small waveforms in the sequencer
- handles for very short samples
- more playback feedback
  - mark / animate active samples in sequencer timeline
  - display current output in the waveform (but where do I mix then?)
- recording: countdown, stop when reached a scene boundary
- disable some actions in some states

- curve editing: use story board thumbnails to drag the curve
    - distinguish pinned thumbs and hanging, curve is defined by the pinned ones,
    the hanging just hang on it
    - how to unpin?
    - default line: scene markers = 0, last event = pin to 1.0
    - how to keep this up to date? remember which pins/unpins are added by whom

screens:
    - bioscoop: only the movie, stop (space bar) -> next screen
    - storyboard: storyboard in marker add mode and movie
    - curve: storyboard in curve editing mode and movie
    - score: storyboard in nav mode, score(edit), movie
    - recording: storyboard(nav), score(nav), sequence(edit), movie

    later:
    - rec studio with sound bank
    - effects

* * *

now:

- export:
[x] export gui
[x] ffmpeg based export implementation

notes

need to be able to copy raw packets from m_videoFile.
this means there will be no video encoder, but a "copier".
there is something called "stream_copy" in AVStream, but not sure how to use it.
this also means that the stream parameters should be copied.

[x] add method to ask video codec from VideoFile.
[x] copy the rest of the video stream format over.
[x] give exporter access to the mixer api

* * *

[x] review the WtsAudio, there are two nearly identical methods, the common functionality should be moved into its own (template) method.
  [x] make a 'mix' function that works on floats
  [x] mix that fills int16 converts the result of the previous
  [x] higher level functions (sampler*) use the lower level mix ones

[x] review the exporter: what can go away, what can be improved for better maintainance?
[ ] GUI: disable most buttons while exporting

* * *

[ ] Factor out SoundBuffer, use QVector<float> instead. Questions:
    - name: the project maintains a mapping from sound vectors to names and back
    - sharing: BufferAt or Synced may refer to the same data
    - save/load: originals get saved once and are refered to by names
